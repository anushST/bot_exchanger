import logging

from src.models import Transaction, TransactionStatuses

logger = logging.getLogger(__name__)


class TransactionNotifier:

    def __init__(self, bot) -> None:
        self.bot = bot

    async def notify(self, transaction: Transaction) -> None:
        try:
            chat_id = transaction.user.tg_id
            if not chat_id:
                logger.warning(f'No chat_id found for transaction {transaction.id}')
                return

            message = self._generate_message(transaction)
            if message:
                await self.bot.send_message(chat_id=chat_id, text=message)
                logger.info(f'Notification sent for transaction {transaction.id} to chat {chat_id}')
        except Exception as e:
            logger.error(f'Failed to send notification for transaction {transaction.id}: {e}', exc_info=True)
            raise

    def _generate_message(self, transaction: Transaction) -> str:
        status_messages = {
            TransactionStatuses.CREATED: f'üöÄ –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:\n–ü–∞–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–Ω—å–≥–∏ —Å—é–¥–∞: {transaction.address_to_send_amount}.\n–í–æ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ {transaction.final_from_amount} –∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {transaction.final_to_amount}',
            TransactionStatuses.PENDING: f'‚åõ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è {transaction.id} –æ–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏.',
            TransactionStatuses.EXCHANGE: f'üîÑ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è {transaction.id} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±–º–µ–Ω–∞.',
            TransactionStatuses.WITHDRAW: f'üí∏ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è {transaction.id} –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤.',
            TransactionStatuses.DONE: f'‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è {transaction.id} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!',
            TransactionStatuses.EXPIRED: f'‚è≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è {transaction.id} –∏—Å—Ç–µ–∫–ª–∞.',
            TransactionStatuses.EMERGENCY: f'‚ö†Ô∏è –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π {transaction.id}.'
        }

        return status_messages.get(transaction.status)
