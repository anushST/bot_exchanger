services:
  zookeeper:
      image: wurstmeister/zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  redis:
    image: redis:6-alpine
    networks:
      - default
    ports:
      - 6379:6379

  db:
    container_name: "db"
    image:  pgvector/pgvector:pg16
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=general
    ports:
      - "5400:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data

  exchanger-api:
    build: ./exchanger
    restart: always
    depends_on:
      - db
      - redis
      - kafka
    command: ["python", "api_main.py"]
    environment:
      - ENV_STATE=dev
    ports:
      - 8000:8000
    volumes:
      - ./exchanger:/usr/src/app

  auth:
    build: ./auth
    restart: always
    depends_on:
      - db
      - redis
      - kafka
    command: ["python", "main.py"]
    environment:
      - ENV_STATE=dev
    ports:
      - 8100:8100
    volumes:
      - ./auth:/usr/src/app

  admin:
    build: ./admin
    restart: always
    depends_on:
      - db
      - redis
      - kafka
    command: ["python", "main.py"]
    environment:
      - ENV_STATE=dev
    ports:
      - 8200:8200
    volumes:
      - ./admin:/usr/src/app
    
  p2p:
    build: ./p2p
    restart: always
    depends_on:
      - db
      - redis
      - kafka
    command: [ "python", "main.py"]
    environment:
      - ENV_STATE=dev
    ports:
      - 8300:8300
    volumes:
      - ./p2p:/usr/src/app

  notification:
    build: ./notification
    restart: always
    depends_on:
      - db
      - redis
      - kafka
    command: [ "python", "main.py"]
    environment:
      - ENV_STATE=dev
    volumes:
      - ./notification:/usr/src/app

  currencies:
    build: ./exchanger
    restart: always
    depends_on:
      - db
      - redis
      - kafka
    command: [ "python", "currencies_main.py"]
    environment:
      - ENV_STATE=dev
    volumes:
      - ./exchanger:/usr/src/app

  transactions:
    build: ./exchanger
    restart: always
    depends_on:
      - db
      - redis
      - kafka
    command: [ "python", "transactions_main.py"]
    environment:
      - ENV_STATE=dev
    volumes:
      - ./exchanger:/usr/src/app
