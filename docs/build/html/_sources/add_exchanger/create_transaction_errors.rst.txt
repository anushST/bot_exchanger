Обработка ошибок при создании транзакции
========================================

В данном разделе рассматривается, как научить бота корректно обрабатывать различные ошибки при создании и выполнении транзакции, а также как уведомлять пользователя о возникших проблемах.

.. contents::
   :local:
   :depth: 2

Возможные ошибки
----------------

В процессе создания и проведения транзакции могут возникать различные ошибки, например:

- Неправильный адрес кошелька (неверный формат, несуществующий адрес и т.д.).
- Недостаточная сумма перевода (отправлено меньше, чем требуется).
- Превышение лимита (отправлено больше, чем разрешено).
- Ошибки сети или блокчейна (задержки, сбои и др.).

Для удобства диагностики, в **модели Транзакции** имеется поле ``status_code``, в котором хранится код ошибки при возникновении проблем. Например, при некорректном адресе кошелька статус код может быть равен ``400``.

Файл с кодами ошибок
--------------------

Все коды, соответствующие различным ошибкам, находятся в модуле:

.. code-block:: text

   /transaction/transaction_codes.py

Пример (упрощённый):

.. code-block:: python

   # transaction_codes.py

    CODE_INVALID_ADDRESS = 400
    CODE_INSUFFICIENT_FUNDS = 402
    CODE_NETWORK_ERROR = 500
    # и т.д.

Методы обработки ошибок
-----------------------

Чтобы бот правильно обрабатывал ошибки, необходимо:

1. **Определить причину ошибки** (на основе поля ``status_code`` транзакции).
2. **Задать соответствующий статус** в обработчике транзакций (например, установить статус ``ERROR``).
3. **Уведомить пользователя** о конкретной проблеме:

   - Это делается через объект **transaction_notifier**, который формирует сообщение для пользователя в зависимости от кода ошибки.

Добавление логики в обработчик транзакций
-----------------------------------------

Обработчик транзакций (см. файл ``exchangers/src/transaction/<exchanger_name>_transaction.py``) должен проверять поле ``status_code`` модели Транзакции. Если оно указывает на ошибку, нужно выставить статус ``ERROR`` (или другой соответствующий статус) и передать информацию о коде ошибки в процессор уведомлений.

Обработка кода ошибки в ``transaction_notifier``
------------------------------------------------

Чтобы пользователь был информирован о возникшей ошибке, необходимо дописать логику в **transaction_notifier** (расположен в ``bot/src/transaction/transaction_notifier.py``). Там вы можете указать, какие именно сообщения отправлять при появлении того или иного кода ошибки.

Таким образом, если в транзакции статус будет помечен как ``error`` и в поле ``status_code`` будет значение ``400`` (означающее неправильный адрес), пользователю отправится соответствующее уведомление.

Заключение
----------

Чтобы бот корректно обрабатывал ошибки:

1. Используйте **поле ``status_code``** в модели Транзакции, где хранится код ошибки.
2. При возникновении проблемы **присваивайте статус ``ERROR``** и сохраняйте соответствующий код.
3. **Дополните логику** в `transaction_notifier.py` для отправки сообщений, информирующих пользователя о характере ошибки.
4. При желании легко **добавляйте новые коды** ошибок в `transaction_codes.py`, а также сообщения к ним в `transaction_notifier.py`.

Такой подход поможет эффективно уведомлять пользователя о причинах неудачной транзакции и упрощает расширение системы при появлении новых типов ошибок. 
